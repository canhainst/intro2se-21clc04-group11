
<script>


    let allData = [];
    let currentPage = 1;
    const resultsPerPage = 8;

    function formatOrderTime(orderTime) {
        return moment(orderTime).format(' HH : mm : ss [ngày] DD [tháng] MM [năm] YYYY');
    }

    function fetchDataAndUpdateTable() {
        fetch('http://localhost:5000/order/all')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                allData = data;
                updateTable();
                updatePagination();
            })
            .catch(error => console.error('Error fetching data:', error));
    }

    function updateTable() {
        const start = (currentPage - 1) * resultsPerPage;
        const end = start + resultsPerPage;
        const data = allData.slice(start, end);

        // Clear existing table rows
        const tbody = document.getElementById('orderTable').getElementsByTagName('tbody')[0];
        tbody.innerHTML = '';

        // Iterate through the data and append rows to the table
        data.forEach((order, index) => {
            const row = `<tr>
                            <th scope="row">${index + 1}</th>
                            <td>${order.Name}</td>
                            <td>${order.Email}</td>
                            <td>${order.TotalPrice}</td>
                            <td>${formatOrderTime(order.CreateTime)}</td>
                            <td>${order.Status}</td>
                            <td class="text-center">
                                <a href="/order/detail/${order.OrderID}">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </td>
                        </tr>`;
            tbody.insertAdjacentHTML('beforeend', row);
        });
    }

    function updatePagination() {
          const totalPage = Math.ceil(allData.length / resultsPerPage);
    const start = (currentPage - 1) * resultsPerPage + 1;
    const end = Math.min(currentPage * resultsPerPage, allData.length);

    // Update the page info
    const pageInfo = document.querySelector('.pageInfo');
    pageInfo.innerHTML = `Showing ${start} - ${end} of ${allData.length} results`;

    // Disable or enable the "Previous" button
    const prevPageButton = document.getElementById('prevPage');
    prevPageButton.disabled = (currentPage === 1);

    // Disable or enable the "Next" button
    const nextPageButton = document.getElementById('nextPage');
    nextPageButton.disabled = (currentPage === totalPage);

    // Update the page number display
    const pageNumberDisplay = document.getElementById('currentPage');
    pageNumberDisplay.textContent = currentPage.toString().padStart(2, '0');
    }

    window.onload = function () {
        document.getElementById('prevPage').addEventListener('click', function () {
            if (currentPage > 1) {
                currentPage--;
                updateTable();
                updatePagination();
            }
        });

        document.getElementById('nextPage').addEventListener('click', function () {
            const totalPage = Math.ceil(allData.length / resultsPerPage);

            if (currentPage < totalPage) {
                currentPage++;
                updateTable();
                updatePagination();
            }
        });

        fetchDataAndUpdateTable();
    }


/*function filterOrders() {

    const selectedStatus = document.getElementById('statusFilterBtn').innerText.trim();

    
    fetch(`http://localhost:5000/order/filter?status=${encodeURIComponent(selectedStatus)}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            // Clear existing table rows
            var tbody = document.getElementById('orderTable').getElementsByTagName('tbody')[0];
            tbody.innerHTML = '';

            // Iterate through the filtered data and append rows to the table
            data.forEach((order, index) => {
                const row = `<tr>
                            <th scope="row">${index + 1}</th>
                            <td>${order.Name}</td>
                            <td>${order.Email}</td>
                            <td>${order.TotalPrice}</td>
                            <td>${formatOrderTime(order.CreateTime)}</td>
                            <td>${order.Status}</td>
                            <td class="text-center">
                                <a href="/order/detail/${order.OrderID}">
                                    <i class="fas fa-eye"></i>
                                </a>
                            </td>
                        </tr>`;
                tbody.insertAdjacentHTML('beforeend', row);
            });
        })
        .catch(error => console.error('Error fetching filtered data:', error));
}


    function filterOrdersByStatus(status) {
    document.getElementById('statusFilterBtn').innerText = status;
    filterOrders();
}

 document.getElementById('button-addon').addEventListener('click', function () {
        const searchInput = document.querySelector('.form-control').value.trim();
        filterOrdersBySearch(searchInput);
    });

    function filterOrdersBySearch(searchInput) {
        fetch(`http://localhost:5000/order/search?query=${encodeURIComponent(searchInput)}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Clear existing table rows
                var tbody = document.getElementById('orderTable').getElementsByTagName('tbody')[0];
                tbody.innerHTML = '';

                // Iterate through the filtered data and append rows to the table
                data.forEach((order, index) => {
                    const row = `<tr>
                                <th scope="row">${index + 1}</th>
                                <td>${order.Name}</td>
                                <td>${order.Email}</td>
                                <td>${order.TotalPrice}</td>
                                <td>${formatOrderTime(order.CreateTime)}</td>
                                <td>${order.Status}</td>
                                <td class="text-center">
                                    <a href="/order/detail/${order.OrderID}">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </td>
                            </tr>`;
                    tbody.insertAdjacentHTML('beforeend', row);
                });
            })
            .catch(error => console.error('Error fetching filtered data:', error));
    }*/
    
    

</script>
<div class="row">
    <div class="col-3" style="padding: 0;">
        <div class="sidebar">
            <div class="box_logo d-flex align-items-center">
                <div class="logo col-3">
                    <i class="far fa-user"
                        style="padding: 0 1em; scale: 9%; margin-bottom: 45px; margin-left: 20px;"></i>
                </div>
                <div class="admin col-8">
                    <ul>
                        <li class="d-flex align-items-center">
                            <span style="font-size: 24px; font-weight: 500;">ADMIN</span>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="nav">
                <ul>
                    <li>
                        <i class="fas fa-columns"></i>
                        <a href="#">DASHBOARD</a>
                    </li>
                    <li>
                        <i class="fas fa-warehouse"></i>
                        <a href="warehouse">WAREHOUSE</a>
                    </li>
                    <li>
                        <i class="fas fa-cart-arrow-down"></i>
                        <a href="#">ADD PRODUCTS</a>
                    </li>
                    <li style="background-color: #ffb9a4;">
                        <i class="fas fa-store"></i>
                        <a href="/">ORDERS</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="col-9" style="padding: 0;">
        <div class="content">
            <div class="title">
                <span style="margin-left: 45px;">Orders</span>
            </div>
            <div class="container" style="margin-top: 70px;">
                <div class="row">
                    <div class="col-5 d-flex">
                        <input type="text" class="form-control border border-dark border-end-0" placeholder="Search"
                            aria-describedby="button-addon">
                        <button style="width: 40px;" class="btn btn-outline-secondary border border-dark border-start-0"
                            type="button" id="button-addon"><i class="fas fa-search"></i></button>
                    </div>
                    <div class="col-4"></div>
                    <div class="col-3">
                        <div class="dropdown">
                            <button id="statusFilterBtn" class="btn btn-secondary dropdown-toggle"
                                style="background-color: white; color: black;" type="button" data-bs-toggle="dropdown"
                                aria-expanded="false" onchange="filterOrders()">Status</button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#"
                                        onclick="filterOrdersByStatus('Processing')">Processing</a></li>
                                <li><a class="dropdown-item" href="#"
                                        onclick="filterOrdersByStatus('Shipping')">Shipping</a></li>
                                <li><a class="dropdown-item" href="#" onclick="filterOrdersByStatus('Delivered')">Delivered</a>
                                </li>
                                <li><a class="dropdown-item" href="#"
                                        onclick="filterOrdersByStatus('Cancel')">Cancel</a></li>
                            </ul>

                        </div>
                    </div>
                    <div class="col-1"></div>
                </div>
                <div class="line"></div>
                <div id="orderList">
                </div>
                <table id="orderTable" class="table">
                    <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col"> Customer's name
                                <i class="fas fa-sort"></i>
                            </th>
                            <th scope="col">Email</th>
                            <th scope="col">Total price
                                <i class="fas fa-sort"></i>
                            </th>
                            <th scope="col">Order Time
                                <i class="fas fa-sort"></i>
                            </th>
                            <th scope="col">Status</th>
                            <th class="text-center" scope="col">Details</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            <div class="pagination">
    <div class="pageInfo">
        <span>Showing 1 - 8 results of </span>
        <span id="totalResults">298</span>
    </div>
    <div class="pagebutton d-flex align-items-center">
        <i class="fas fa-arrow-left" id="prevPage"></i>
        <div style="padding: 0 20px;">
            <span>page </span>
            <span id="currentPage">01</span>
        </div>
        <i class="fas fa-arrow-right" id="nextPage"></i>
    </div>
</div>
            </div>
        </div>